# Use postgres/example user/password credentials
version: "3.5"

services:
  db:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - codepod-db-prod:/var/lib/postgresql/data

  api:
    image: codepod-api:v0.0.3.1
    depends_on:
      - rabbitmq
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - git-data-prod:/srv/git
    command: yarn start
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}
      KERNEL_NETWORK: "codepod-prod"

  ui:
    image: codepod-ui:v0.0.3.1
    restart: always
    # FIXME this takes a lot of time on startup
    command: yarn start

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    volumes:
      - ./rabbitmq/enabled_plugins:/etc/rabbitmq/enabled_plugins

  git-http:
    restart: always
    build: ../dev/docker-git-http
    volumes:
      - git-data-prod:/var/lib/git

  # docker-compose up -d --build --force-recreate --no-deps nginx
  nginx:
    image: nginx:1.15-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/lib/letsencrypt:/var/lib/letsencrypt
      # I'm mounting this so that I can use webroot method for letsencrypt on
      # the host
      #
      # 1. comment out everything except first block in nginx.conf
      # 2. mount /var/www/html
      # 3. force-recreate nginx container
      # 4. run certbot
      # 5. revoke 1 and 2, and run 3
      #
      # sudo certbot certonly --webroot
      # for webroot, enter /var/www/html
      #
      # only enable when I do the renew
      #
      # - /var/www/html:/var/www/html
    depends_on:
      - ui

  # docker run -it --rm --network host -v $(pwd)/frpc.ini:/etc/frp/frpc.ini snowdreamtech/frpc
  frpc:
    image: snowdreamtech/frpc
    restart: always
    volumes:
      - ./frpc.ini:/etc/frp/frpc.ini
    network_mode: "host"

volumes:
  codepod-db-prod:
  git-data-prod:

networks:
  default:
    name: codepod-prod
    driver: bridge
