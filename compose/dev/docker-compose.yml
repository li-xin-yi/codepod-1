# Use postgres/example user/password credentials
version: "3.5"

services:
  db:
    image: postgres
    restart: always
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - db-data:/var/lib/postgresql/data

  # pgadmin:
  #   image: dpage/pgadmin4

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  prisma:
    image: node
    restart: always
    ports:
      - 5555:5555
    # command: npm config set unsafe-perm true && npx prisma studio
    command: yarn run prisma studio
    working_dir: /app
    volumes:
      - ../../api:/app
      # - ./api/node_modules:/app/node_modules
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"

  api:
    image: node:16
    depends_on:
      # FIXME rabbitmq stomp server does not start immediately
      - rabbitmq
    working_dir: /app
    restart: always
    ports:
      - 4000:4000
    volumes:
      - ../../api:/app
      - /var/run/docker.sock:/var/run/docker.sock
      - git-data:/srv/git
    command: yarn dev
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}?schema=public"
      JWT_SECRET: ${JWT_SECRET}
      KERNEL_NETWORK: "codepod"

  ui:
    image: node:16
    working_dir: /app
    restart: always
    volumes:
      - ../../ui:/app
    command: yarn start

  rabbitmq:
    image: rabbitmq:3-management-alpine
    restart: always
    volumes:
      # This will allow the enabled plugins to persist on restart
      # In production, I need to use /etc/rabbitmq/enabled_plugins to enable plugins
      - rabbitmq-etc:/etc/rabbitmq/
      - rabbitmq-data:/var/lib/rabbitmq/
      - rabbitmq-logs:/var/log/rabbitmq/
    ports:
      # The AMQP port
      # - 5672:5672
      # the management UI
      - 15672:15672
      # STOMP-over-WebSockets
      # - 15674:15674
      # 61613 STOMP clients, internally used by kernel.js

  # https://github.com/anyakichi/docker-git-http
  #
  # visit git.codepod.test:3000 to visit the gitweb interface
  # clone using git clone http://git.codepod.test:3000/path/to/repo/.git
  git-http:
    restart: always
    build: ./docker-git-http
    ports:
      - "2222:80"
    volumes:
      - git-data:/var/lib/git

  # I need nginx in dev build too because I don't want to add :4000 in the
  # browser code. The nginx here forwards the /graphql to :4000
  nginx:
    image: nginx:1.15-alpine
    restart: always
    ports:
      - "3000:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
    depends_on:
      - ui

volumes:
  db-data:
  git-data:
  dotjulia:
  pipcache:
  rabbitmq-data:
  rabbitmq-logs:
  rabbitmq-etc:

networks:
  default:
    name: codepod
    driver: bridge
